<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hz21city.xiangqu.dao.IUserInfoDao">
	<resultMap id="BaseResultMap" type="com.hz21city.xiangqu.pojo.UserInfo">
		<id column="id" property="id" jdbcType="BIGINT" />
		<result column="user_name" property="userName" jdbcType="VARCHAR" />
		<result column="real_name" property="realName" jdbcType="VARCHAR" />
		<result column="nick_name" property="nickName" jdbcType="VARCHAR" />
		<result column="moblie" property="moblie" jdbcType="VARCHAR" />
		<result column="gender" property="gender" jdbcType="VARCHAR" />
		<result column="e_mail" property="eMail" jdbcType="VARCHAR" />
		<result column="password" property="password" jdbcType="VARCHAR" />
		<result column="invite_code" property="inviteCode" jdbcType="INTEGER" />
		<result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
		<result column="pic" property="pic" jdbcType="VARCHAR" />
		<result column="balance" property="balance" jdbcType="REAL" />
		<result column="province" property="province" jdbcType="BIGINT" />
		<result column="city" property="city" jdbcType="BIGINT" />
		<result column="area" property="area" jdbcType="BIGINT" />
		<result column="address" property="address" jdbcType="VARCHAR" />
		<result column="qq_openid" property="qq_openid" jdbcType="VARCHAR" />
		<result column="weixin_openid" property="weixin_openid" jdbcType="VARCHAR" />
		<result column="client_id" property="client_id" jdbcType="VARCHAR" />
		<result column="inviet_code" property="invietCode" jdbcType="VARCHAR" />
		<result column="invite_user_id" property="inviteUserId" jdbcType="BIGINT" />
		<result column="type" property="type" jdbcType="INTEGER" />
		<result column="inviet_count" property="invietCount" jdbcType="INTEGER" />
	</resultMap>
	<sql id="Base_Column_List">
		id, user_name, real_name, nick_name, moblie, gender,
		e_mail, password, invite_code,
		update_time, pic, balance, province,
		city, area, address, qq_openid, weixin_openid,
		client_id, inviet_code,
		invite_user_id, type, inviet_count
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
		select
		<include refid="Base_Column_List" />
		from t_user_info
		where id = #{id,jdbcType=BIGINT}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from
		t_user_info
		where id = #{id,jdbcType=BIGINT}
	</delete>
	<insert id="insert" parameterType="com.hz21city.xiangqu.pojo.UserInfo">
		insert into t_user_info (id,
		user_name, real_name,
		nick_name, moblie, gender,
		e_mail, password,
		invite_code,
		update_time, pic, balance,
		province, city, area,
		address,
		qq_openid, weixin_openid,
		client_id, inviet_code, invite_user_id, type,
		inviet_count
		)
		values (#{id,jdbcType=BIGINT},
		#{userName,jdbcType=VARCHAR}, #{realName,jdbcType=VARCHAR},
		#{nickName,jdbcType=VARCHAR}, #{moblie,jdbcType=VARCHAR},
		#{gender,jdbcType=VARCHAR},
		#{eMail,jdbcType=VARCHAR},
		#{password,jdbcType=VARCHAR}, #{inviteCode,jdbcType=INTEGER},
		#{updateTime,jdbcType=TIMESTAMP}, #{pic,jdbcType=VARCHAR},
		#{balance,jdbcType=REAL},
		#{province,jdbcType=BIGINT},
		#{city,jdbcType=BIGINT}, #{area,jdbcType=BIGINT},
		#{address,jdbcType=VARCHAR}, #{qq_openid,jdbcType=VARCHAR},
		#{weixin_openid,jdbcType=VARCHAR},
		#{client_id,jdbcType=VARCHAR},
		#{invietCode,jdbcType=VARCHAR}, #{inviteUserId,jdbcType=BIGINT},
		#{type,jdbcType=INTEGER},
		#{invietCount,jdbcType=INTEGER}
		)
	</insert>
	<insert id="insertSelective" parameterType="com.hz21city.xiangqu.pojo.UserInfo">
		insert into t_user_info
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="userName != null">
				user_name,
			</if>
			<if test="realName != null">
				real_name,
			</if>
			<if test="nickName != null">
				nick_name,
			</if>
			<if test="moblie != null">
				moblie,
			</if>
			<if test="gender != null">
				gender,
			</if>
			<if test="eMail != null">
				e_mail,
			</if>
			<if test="password != null">
				password,
			</if>
			<if test="inviteCode != null">
				invite_code,
			</if>
			<if test="updateTime != null">
				update_time,
			</if>
			<if test="pic != null">
				pic,
			</if>
			<if test="balance != null">
				balance,
			</if>
			<if test="province != null">
				province,
			</if>
			<if test="city != null">
				city,
			</if>
			<if test="area != null">
				area,
			</if>
			<if test="address != null">
				address,
			</if>
			<if test="qq_openid != null">
				qq_openid,
			</if>
			<if test="weixin_openid != null">
				weixin_openid,
			</if>
			<if test="client_id != null">
				client_id,
			</if>
			<if test="invietCode != null">
				inviet_code,
			</if>
			<if test="inviteUserId != null">
				invite_user_id,
			</if>
			<if test="type != null">
				type,
			</if>
			<if test="invietCount != null">
				inviet_count,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=BIGINT},
			</if>
			<if test="userName != null">
				#{userName,jdbcType=VARCHAR},
			</if>
			<if test="realName != null">
				#{realName,jdbcType=VARCHAR},
			</if>
			<if test="nickName != null">
				#{nickName,jdbcType=VARCHAR},
			</if>
			<if test="moblie != null">
				#{moblie,jdbcType=VARCHAR},
			</if>
			<if test="gender != null">
				#{gender,jdbcType=VARCHAR},
			</if>
			<if test="eMail != null">
				#{eMail,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				#{password,jdbcType=VARCHAR},
			</if>
			<if test="inviteCode != null">
				#{inviteCode,jdbcType=INTEGER},
			</if>
			<if test="updateTime != null">
				#{updateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="pic != null">
				#{pic,jdbcType=VARCHAR},
			</if>
			<if test="balance != null">
				#{balance,jdbcType=REAL},
			</if>
			<if test="province != null">
				#{province,jdbcType=BIGINT},
			</if>
			<if test="city != null">
				#{city,jdbcType=BIGINT},
			</if>
			<if test="area != null">
				#{area,jdbcType=BIGINT},
			</if>
			<if test="address != null">
				#{address,jdbcType=VARCHAR},
			</if>
			<if test="qq_openid != null">
				#{qq_openid,jdbcType=VARCHAR},
			</if>
			<if test="weixin_openid != null">
				#{weixin_openid,jdbcType=VARCHAR},
			</if>
			<if test="client_id != null">
				#{client_id,jdbcType=VARCHAR},
			</if>
			<if test="invietCode != null">
				#{invietCode,jdbcType=VARCHAR},
			</if>
			<if test="inviteUserId != null">
				#{inviteUserId,jdbcType=BIGINT},
			</if>
			<if test="type != null">
				#{type,jdbcType=INTEGER},
			</if>
			<if test="invietCount != null">
				#{invietCount,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.hz21city.xiangqu.pojo.UserInfo">
		update t_user_info
		<set>
			<if test="userName != null">
				user_name = #{userName,jdbcType=VARCHAR},
			</if>
			<if test="realName != null">
				real_name = #{realName,jdbcType=VARCHAR},
			</if>
			<if test="nickName != null">
				nick_name = #{nickName,jdbcType=VARCHAR},
			</if>
			<if test="moblie != null">
				moblie = #{moblie,jdbcType=VARCHAR},
			</if>
			<if test="gender != null">
				gender = #{gender,jdbcType=VARCHAR},
			</if>
			<if test="eMail != null">
				e_mail = #{eMail,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				password = #{password,jdbcType=VARCHAR},
			</if>
			<if test="inviteCode != null">
				invite_code = #{inviteCode,jdbcType=INTEGER},
			</if>
			<if test="updateTime != null">
				update_time = #{updateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="pic != null">
				pic = #{pic,jdbcType=VARCHAR},
			</if>
			<if test="balance != null">
				balance = #{balance,jdbcType=REAL},
			</if>
			<if test="province != null">
				province = #{province,jdbcType=BIGINT},
			</if>
			<if test="city != null">
				city = #{city,jdbcType=BIGINT},
			</if>
			<if test="area != null">
				area = #{area,jdbcType=BIGINT},
			</if>
			<if test="address != null">
				address = #{address,jdbcType=VARCHAR},
			</if>
			<if test="qq_openid != null">
				qq_openid = #{qq_openid,jdbcType=VARCHAR},
			</if>
			<if test="weixin_openid != null">
				weixin_openid = #{weixin_openid,jdbcType=VARCHAR},
			</if>
			<if test="client_id != null">
				client_id = #{client_id,jdbcType=VARCHAR},
			</if>
			<if test="invietCode != null">
				inviet_code = #{invietCode,jdbcType=VARCHAR},
			</if>
			<if test="inviteUserId != null">
				invite_user_id = #{inviteUserId,jdbcType=BIGINT},
			</if>
			<if test="type != null">
				type = #{type,jdbcType=INTEGER},
			</if>
			<if test="invietCount != null">
				inviet_count = #{invietCount,jdbcType=INTEGER},
			</if>
		</set>
		where id = #{id,jdbcType=BIGINT}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.hz21city.xiangqu.pojo.UserInfo">
		update t_user_info
		set user_name = #{userName,jdbcType=VARCHAR},
		real_name =
		#{realName,jdbcType=VARCHAR},
		nick_name = #{nickName,jdbcType=VARCHAR},
		moblie = #{moblie,jdbcType=VARCHAR},
		gender =
		#{gender,jdbcType=VARCHAR},
		e_mail = #{eMail,jdbcType=VARCHAR},
		password = #{password,jdbcType=VARCHAR},
		invite_code =
		#{inviteCode,jdbcType=INTEGER},
		update_time
		=
		#{updateTime,jdbcType=TIMESTAMP},
		pic = #{pic,jdbcType=VARCHAR},
		balance = #{balance,jdbcType=REAL},
		province =
		#{province,jdbcType=BIGINT},
		city = #{city,jdbcType=BIGINT},
		area =
		#{area,jdbcType=BIGINT},
		address = #{address,jdbcType=VARCHAR},
		qq_openid = #{qq_openid,jdbcType=VARCHAR},
		weixin_openid =
		#{weixin_openid,jdbcType=VARCHAR},
		client_id =
		#{client_id,jdbcType=VARCHAR},
		inviet_code =
		#{invietCode,jdbcType=VARCHAR},
		invite_user_id =
		#{inviteUserId,jdbcType=BIGINT},
		type = #{type,jdbcType=INTEGER},
		inviet_count = #{invietCount,jdbcType=INTEGER}
		where id =
		#{id,jdbcType=BIGINT}
	</update>


	<!-- xxxxxxxxxxxxxxxx -->

	<select id="getUserList" resultMap="BaseResultMap" parameterType="map">
		select * from t_user_info
		<where>
			<if test="keywords!=null and keywords!='' ">
				and (user_name like #{keywords} or real_name like
				#{keywords} or nick_name like #{keywords} or moblie like
				#{keywords})
			</if>
			<if test="searchType != null and searchType != ''">
				<choose>
					<when test="searchType == 1">
						and nick_name NOT REGEXP '^微信用户[0-9]*$'
					</when>
					<when test="searchType == 2">
						and nick_name REGEXP '^微信用户[0-9]*$'
					</when>
					<otherwise></otherwise>
				</choose>
			</if>
			<if test="start!=null and start!='' ">
				<![CDATA[ and update_time >= #{start}  ]]>
			</if>
			<if test="end!=null and end!=''">
				<![CDATA[ and  update_time <= #{end} ]]>
			</if>
			<if test="UCollectCount != null and UCollectCount != ''">
				and <![CDATA[balance >= #{UCollectCount}]]>
			</if>
			<if test="DCollectCount != null and DCollectCount != ''">
				and <![CDATA[balance <= #{DCollectCount}]]>
			</if>
		</where>
		order by id desc limit 10
		offset #{page}
	</select>

	<select id="getUserListSize" resultType="java.lang.Integer" parameterType="map">
		select count(id) from t_user_info
		<where>
			<if test="keywords!=null and keywords!='' ">
				and (user_name like #{keywords} or real_name like
				#{keywords} or nick_name like #{keywords} or moblie like
				#{keywords})
			</if>
			<if test="searchType != null and searchType != ''">
				<choose>
					<when test="searchType == 1">
						and nick_name NOT REGEXP '^微信用户[0-9]*$'
					</when>
					<when test="searchType == 2">
						and nick_name REGEXP '^微信用户[0-9]*$'
					</when>
					<otherwise></otherwise>
				</choose>
			</if>
			<if test="UCollectCount != null and UCollectCount != ''">
				and <![CDATA[balance >= #{UCollectCount}]]>
			</if>
			<if test="DCollectCount != null and DCollectCount != ''">
				and <![CDATA[balance <= #{DCollectCount}]]>
			</if>
			<if test="start!=null and start!='' ">
				<![CDATA[ and update_time >= #{start}  ]]>
			</if>
			<if test="end!=null and end!=''">
				<![CDATA[ and  update_time <= #{end} ]]>
			</if>
		</where>
	</select>

	<select id="getUserInfoByQQ_openid" resultMap="BaseResultMap" parameterType="java.lang.String">
		select * from t_user_info where qq_openid = #{qq_openid,
		jdbcType=VARCHAR }
	</select>

	<select id="getUserInfoByWeixin_openid" resultMap="BaseResultMap" parameterType="java.lang.String">
		select * from t_user_info where weixin_openid =
		#{weixin_openid, jdbcType=VARCHAR }
	</select>

	<select id="getUserInfoByNameOrMoblie" resultMap="BaseResultMap" parameterType="map">
		select * from t_user_info where user_name = #{userName,
		jdbcType=VARCHAR} or moblie = #{moblie, jdbcType=VARCHAR}
	</select>

	<select id="getAllUserSize" resultType="java.lang.Integer">
		select count(id) from
		t_user_info
	</select>

	<select id="AllUserList" resultMap="BaseResultMap">
		select * from t_user_info
	</select>

	<select id="getUserInfoByMoblie" resultMap="BaseResultMap" parameterType="java.lang.String">
		select * from t_user_info where moblie = #{moblie,
		jdbcType=VARCHAR}
	</select>

	<select id="selectByuserName" resultMap="BaseResultMap" parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from t_user_info
		where user_name = #{userName,jdbcType=VARCHAR}
	</select>

	<select id="getUserInfoByInvietCode" resultMap="BaseResultMap" parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from t_user_info
		where inviet_code = #{invietCode,jdbcType=VARCHAR}
	</select>

	<select id="getUserCountByCode" resultType="java.lang.Integer" parameterType="java.lang.String">
		select count(*) from t_user_info where inviet_code =
		#{invietCode,jdbcType=VARCHAR}
	</select>

	<select id="getUserRandom" resultMap="BaseResultMap">
		select * from t_user_info
		where type = -1 order by rand() limit 1
	</select>

	<select id="getUserListHasntInviteCode" resultMap="BaseResultMap">
		select * from
		t_user_info where inviet_code is null OR inviet_code = ''
	</select>

	<update id="updateUserInviteCombine" parameterType="map">
		update
		t_user_info set invite_user_id = #{mobileuserid} where invite_user_id
		= #{combineduserid}
	</update>

	<!-- 查邀请数的 -->
	<select id="getUserInviteData" resultType="com.hz21city.xiangqu.pojo.UserInviteCount" parameterType="map">
		select user_id, count(id) as icount from t_income_record
		<where>
			type = 8
			<if test="start != null and start != ''">
				and <![CDATA[time >= #{start}]]>
			</if>
			<if test="end != null and end != ''">
				and <![CDATA[time <= #{end}]]>
			</if>
		</where>
		group by user_id order by icount desc
	</select>


	<!-- 推广员 -->

	<select id="getPromoterList" resultMap="BaseResultMap" parameterType="map">
		select * from t_user_info where <![CDATA[ type >= 0 ]]>
		<if test="keywords!=null and keywords!='' ">
			and (user_name like #{keywords} or real_name like #{keywords} or
			nick_name like #{keywords} or moblie like #{keywords})
		</if>
		order by id desc limit 10
		offset #{page}
	</select>

	<select id="getPromoterListSize" resultType="java.lang.Integer" parameterType="map">
		select count(id) from t_user_info where <![CDATA[type >= 0 ]]>
		<if test="keywords!=null and keywords!='' ">
			and (user_name like #{keywords} or real_name like #{keywords} or
			nick_name like #{keywords} or moblie like #{keywords})
		</if>
	</select>






	<!-- —————————————————————————————————————— -->
	<resultMap id="SortResultMap" type="com.hz21city.xiangqu.pojo.UserInfo">
		<id column="id" property="id" jdbcType="BIGINT" />
		<result column="user_name" property="userName" jdbcType="VARCHAR" />
		<result column="real_name" property="realName" jdbcType="VARCHAR" />
		<result column="nick_name" property="nickName" jdbcType="VARCHAR" />
		<result column="moblie" property="moblie" jdbcType="VARCHAR" />
		<result column="gender" property="gender" jdbcType="VARCHAR" />
		<result column="e_mail" property="eMail" jdbcType="VARCHAR" />
		<result column="password" property="password" jdbcType="VARCHAR" />
		<result column="invite_code" property="inviteCode" jdbcType="INTEGER" />
		<result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
		<result column="pic" property="pic" jdbcType="VARCHAR" />
		<result column="balance" property="balance" jdbcType="REAL" />
		<result column="province" property="province" jdbcType="BIGINT" />
		<result column="city" property="city" jdbcType="BIGINT" />
		<result column="area" property="area" jdbcType="BIGINT" />
		<result column="address" property="address" jdbcType="VARCHAR" />
		<result column="qq_openid" property="qq_openid" jdbcType="VARCHAR" />
		<result column="weixin_openid" property="weixin_openid" jdbcType="VARCHAR" />
		<result column="client_id" property="client_id" jdbcType="VARCHAR" />
		<result column="inviet_code" property="invietCode" jdbcType="VARCHAR" />
		<result column="invite_user_id" property="inviteUserId" jdbcType="BIGINT" />
		<result column="type" property="type" jdbcType="INTEGER" />
		<result column="inviet_count" property="invietCount" jdbcType="INTEGER" />
		<result column="day_income" property="dailyIncome" jdbcType="REAL" />
		<result column="total_income" property="totalIncome" jdbcType="REAL" />
	</resultMap>


	<select id="getUserSortList" resultMap="SortResultMap" parameterType="map">
		select u.*, r.total_income, r.day_income from t_user_info u left join t_user_income r on r.user_id = u.id
		<where>
			<if test="keywords!=null and keywords!='' ">
				and (user_name like #{keywords} or real_name like
				#{keywords} or nick_name like #{keywords} or moblie like
				#{keywords})
			</if>
			<if test="searchType != null and searchType != ''">
				<choose>
					<when test="searchType == 1">
						and nick_name NOT REGEXP '^微信用户[0-9]*$'
					</when>
					<when test="searchType == 2">
						and nick_name REGEXP '^微信用户[0-9]*$'
					</when>
					<otherwise></otherwise>
				</choose>
			</if>
			<if test="start!=null and start!='' ">
				<![CDATA[ and update_time >= #{start}  ]]>
			</if>
			<if test="end!=null and end!=''">
				<![CDATA[ and  update_time <= #{end} ]]>
			</if>
			<if test="UCollectCount != null and UCollectCount != ''">
				and <![CDATA[balance >= #{UCollectCount}]]>
			</if>
			<if test="DCollectCount != null and DCollectCount != ''">
				and <![CDATA[balance <= #{DCollectCount}]]>
			</if>
		</where>
		<if test="isSort == 0 and baSort == 0 and incomeSort== 0">
			order by id desc
		</if>
		<if test="isSort == 1 and baSort == 0 and incomeSort== 0">
			order by inviet_count desc
		</if>
		<!-- <if test="isSort == 1 and baSort == 1 and incomeSort== 1"> order by inviet_count desc, balance desc </if> -->
		<if test="baSort == 1 and isSort == 0 and incomeSort== 0">
			order by balance desc
		</if>
		<if test="baSort == 0 and isSort == 0 and incomeSort== 1">
			order by r.day_income desc
		</if>
		limit 10 offset #{page}
	</select>
</mapper>